name: Build & Publish site

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to production?"
        type: boolean
        default: false
      sync-dev:
        description: "Sync to dev repo?"
        type: boolean
        default: false
  push:
    branches:
      - "main"
    paths:
      - "src/**"

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  SRC_PATH: "src"
  DST_PATH: "/tmp/output"
  PRO_BRANCH: "main"
  DEV_REPO: "${{ github.repository_owner }}/davidosuna-linktree-dev"
  RUBY_VERSION: "3.1"
  ARTIFACT_NAME: "site"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.255.0
        with:
          ruby-version: "${{ env.RUBY_VERSION }}"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          working-directory: ${{ env.SRC_PATH }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        working-directory: ${{ env.SRC_PATH }}
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" --destination ${{ env.DST_PATH }}
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.DST_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.deploy == 'true'
    steps:
      - name: Deploy page
        uses: actions/deploy-pages@v4
        with:
          artifact_name: ${{ env.ARTIFACT_NAME }}
